2024-09-29 02:12:38.850979+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "DROP TABLE CLIENTS IF EXISTS [*]CREATE TABLE CLIENTS ( id int NOT NULL AUTO_INCREMENT, name varchar(80) NOT NULL, lastname varchar(255), docnumber varchar(11), )"
Syntax error in SQL statement "DROP TABLE CLIENTS IF EXISTS [*]CREATE TABLE CLIENTS ( id int NOT NULL AUTO_INCREMENT, name varchar(80) NOT NULL, lastname varchar(255), docnumber varchar(11), )"; SQL statement:
DROP TABLE CLIENTS IF EXISTS CREATE TABLE CLIENTS ( id int NOT NULL AUTO_INCREMENT, name varchar(80) NOT NULL, lastname varchar(255), docnumber varchar(11), ) [42000-224]
2024-09-29 02:17:35.401585+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "CREATE TABLE PRODUCTS ( id int NOT NULL AUTO_INCREMENT, descripcion varchar(255) NOT NULL, code varchar(50), stock int, price FLOAT(11[*], 2) )"; se esperaba ")"
Syntax error in SQL statement "CREATE TABLE PRODUCTS ( id int NOT NULL AUTO_INCREMENT, descripcion varchar(255) NOT NULL, code varchar(50), stock int, price FLOAT(11[*], 2) )"; expected ")"; SQL statement:
CREATE TABLE PRODUCTS ( id int NOT NULL AUTO_INCREMENT, descripcion varchar(255) NOT NULL, code varchar(50), stock int, price FLOAT(11, 2) ) [42001-224]
2024-09-29 02:24:27.697798+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "CREATE TABLE INVOICES ( id int PRIMARY KEY AUTO_INCREMENT, client_id int, created_at datetime, total DECIMAL(11, 2) ) [*]DROP TABLE INVOICE_DETAILS IF EXISTS"
Syntax error in SQL statement "CREATE TABLE INVOICES ( id int PRIMARY KEY AUTO_INCREMENT, client_id int, created_at datetime, total DECIMAL(11, 2) ) [*]DROP TABLE INVOICE_DETAILS IF EXISTS"; SQL statement:
CREATE TABLE INVOICES ( id int PRIMARY KEY AUTO_INCREMENT, client_id int, created_at datetime, total DECIMAL(11, 2) ) DROP TABLE INVOICE_DETAILS IF EXISTS [42000-224]
2024-09-29 02:27:56.150756+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "PRODUCTS" ya existe
Table "PRODUCTS" already exists; SQL statement:
CREATE TABLE PRODUCTS ( id INT PRIMARY KEY AUTO_INCREMENT, description VARCHAR(255) NOT NULL, code VARCHAR(50), stock INT, price DECIMAL(11, 2) ) [42101-224]
2024-09-29 02:31:24.594946+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "CREATE TABLE CLIENTS ( id INT PRIMARY KEY [*]IDENTITY, name varchar(80) NOT NULL, lastname varchar(80), docnumber varchar(11) )"; se esperaba "HASH, CONSTRAINT, COMMENT, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE CLIENTS ( id INT PRIMARY KEY [*]IDENTITY, name varchar(80) NOT NULL, lastname varchar(80), docnumber varchar(11) )"; expected "HASH, CONSTRAINT, COMMENT, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE CLIENTS ( id INT PRIMARY KEY IDENTITY, name varchar(80) NOT NULL, lastname varchar(80), docnumber varchar(11) ) [42001-224]
2024-09-29 02:34:36.891609+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "CREATE TABLE PRODUCTS ( id INT PRIMARY KEY [*]IDENTITY, description VARCHAR(255) NOT NULL, code VARCHAR(50), stock INT, price DECIMAL(11, 2) )"; se esperaba "HASH, CONSTRAINT, COMMENT, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE PRODUCTS ( id INT PRIMARY KEY [*]IDENTITY, description VARCHAR(255) NOT NULL, code VARCHAR(50), stock INT, price DECIMAL(11, 2) )"; expected "HASH, CONSTRAINT, COMMENT, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE PRODUCTS ( id INT PRIMARY KEY IDENTITY, description VARCHAR(255) NOT NULL, code VARCHAR(50), stock INT, price DECIMAL(11, 2) ) [42001-224]
2024-09-29 02:36:32.179880+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "CREATE TABLE INVOICES ( id INT PRIMARY KEY [*]IDENTITY, client_id int, created_at datetime, total DECIMAL(11, 2) )"; se esperaba "HASH, CONSTRAINT, COMMENT, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE INVOICES ( id INT PRIMARY KEY [*]IDENTITY, client_id int, created_at datetime, total DECIMAL(11, 2) )"; expected "HASH, CONSTRAINT, COMMENT, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE INVOICES ( id INT PRIMARY KEY IDENTITY, client_id int, created_at datetime, total DECIMAL(11, 2) ) [42001-224]
2024-09-29 02:39:00.034297+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "CREATE TABLE INVOICE_DETAILS ( id INT PRIMARY KEY AUTO_INCREMENT, invoice_id int [*]amount int, product_id int NOT NULL, price DECIMAL(11, 2), description varchar(255) NOT NULL )"; se esperaba "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"
Syntax error in SQL statement "CREATE TABLE INVOICE_DETAILS ( id INT PRIMARY KEY AUTO_INCREMENT, invoice_id int [*]amount int, product_id int NOT NULL, price DECIMAL(11, 2), description varchar(255) NOT NULL )"; expected "ARRAY, INVISIBLE, VISIBLE, NOT NULL, DEFAULT, GENERATED, ON UPDATE, NOT NULL, DEFAULT ON NULL, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY KEY, UNIQUE, NOT NULL, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE INVOICE_DETAILS ( id INT PRIMARY KEY AUTO_INCREMENT, invoice_id int amount int, product_id int NOT NULL, price DECIMAL(11, 2), description varchar(255) NOT NULL ) [42001-224]
2024-09-29 03:00:27.222814+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "INSERT INTO PRODUCTS (description, code, stock, price) VALUES ('Celular Iphone 15 XR PRO', 'XZ47676777', 777, 1750), ('Celular XIAOMI XTS ', 'DGFGDG56', 100, 1150), ('Auricular inalambrico Xiaomi 3t5', 'GRGDRGD55', 90, 800), ('Carcaza Transparente Iphone 15x', 'CARCA89894', 200, 70), [*]"; se esperaba "ROW (, (, DEFAULT, INTERSECTS (, NOT, EXISTS, UNIQUE, INTERSECTS"
Syntax error in SQL statement "INSERT INTO PRODUCTS (description, code, stock, price) VALUES ('Celular Iphone 15 XR PRO', 'XZ47676777', 777, 1750), ('Celular XIAOMI XTS ', 'DGFGDG56', 100, 1150), ('Auricular inalambrico Xiaomi 3t5', 'GRGDRGD55', 90, 800), ('Carcaza Transparente Iphone 15x', 'CARCA89894', 200, 70), [*]"; expected "ROW (, (, DEFAULT, INTERSECTS (, NOT, EXISTS, UNIQUE, INTERSECTS"; SQL statement:
INSERT INTO PRODUCTS (description, code, stock, price) VALUES ('Celular Iphone 15 XR PRO', 'XZ47676777', 777, 1750), ('Celular XIAOMI XTS ', 'DGFGDG56', 100, 1150), ('Auricular inalambrico Xiaomi 3t5', 'GRGDRGD55', 90, 800), ('Carcaza Transparente Iphone 15x', 'CARCA89894', 200, 70),  [42001-224]
2024-09-29 03:03:17.124642+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "INSERT INTO PRODUCTS (description, code, stock, price) VALUES ('Celular Iphone 15 XR PRO', 'XZ47676777', 777, 1750), ('Celular XIAOMI XTS ', 'DGFGDG56', 100, 1150), ('Auricular inalambrico Xiaomi 3t5', 'GRGDRGD55', 90, 800), ('Carcaza Transparente Iphone 15x', 'CARCA89894', 200, 70),[*]"; se esperaba "ROW (, (, DEFAULT, INTERSECTS (, NOT, EXISTS, UNIQUE, INTERSECTS"
Syntax error in SQL statement "INSERT INTO PRODUCTS (description, code, stock, price) VALUES ('Celular Iphone 15 XR PRO', 'XZ47676777', 777, 1750), ('Celular XIAOMI XTS ', 'DGFGDG56', 100, 1150), ('Auricular inalambrico Xiaomi 3t5', 'GRGDRGD55', 90, 800), ('Carcaza Transparente Iphone 15x', 'CARCA89894', 200, 70),[*]"; expected "ROW (, (, DEFAULT, INTERSECTS (, NOT, EXISTS, UNIQUE, INTERSECTS"; SQL statement:
INSERT INTO PRODUCTS (description, code, stock, price) VALUES ('Celular Iphone 15 XR PRO', 'XZ47676777', 777, 1750), ('Celular XIAOMI XTS ', 'DGFGDG56', 100, 1150), ('Auricular inalambrico Xiaomi 3t5', 'GRGDRGD55', 90, 800), ('Carcaza Transparente Iphone 15x', 'CARCA89894', 200, 70), [42001-224]
2024-09-29 03:05:27.811618+02:00 database: wrong user or password; user: "CODER"
org.h2.message.DbException: Nombre de usuario รณ password incorrecto
Wrong user name or password [28000-224]
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.engine.Engine.openSession(Engine.java:154)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:343)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:125)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:288)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:811)
	at org.h2.server.web.WebApp.login(WebApp.java:1039)
	at org.h2.server.web.WebApp.process(WebApp.java:227)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:177)
	at org.h2.server.web.JakartaWebServlet.doGet(JakartaWebServlet.java:129)
	at org.h2.server.web.JakartaWebServlet.doPost(JakartaWebServlet.java:166)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.h2.jdbc.JdbcSQLInvalidAuthorizationSpecException: Nombre de usuario รณ password incorrecto
Wrong user name or password [28000-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:522)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 50 more
2024-09-29 03:12:04.239563+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO INVOICES (client_id, created_at, total) VALUES (2, 'XZ47676777', 777, 1750), ('Celular XIAOMI XTS', 'DGFGDG56', 100, 1150), ('Auricular inalambrico Xiaomi 3t5', 'GRGDRGD55', 90, 800), ('Carcaza Transparente Iphone 15x', 'CARCA89894', 200, 70) [21002-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:295)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:489)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at edu.coderhouse.jpa.JpaApplication.main(JpaApplication.java:10)
2024-09-29 03:16:06.628407+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO INVOICES (client_id, created_at, total) VALUES ('Celular Iphone 15 XR PRO', 'XZ47676777', 777, 1750), ('Celular XIAOMI XTS', 'DGFGDG56', 100, 1150.50), ('Auricular inalambrico Xiaomi 3t5', 'GRGDRGD55', 90, 800.75), ('Carcaza Transparente Iphone 15x', 'CARCA89894', 200, 70) [21002-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:295)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:489)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at edu.coderhouse.jpa.JpaApplication.main(JpaApplication.java:10)
2024-09-29 03:16:43.178910+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO INVOICES (client_id, created_at, total) VALUES ('Celular Iphone 15 XR PRO', 'XZ47676777', 777, 1750), ('Celular XIAOMI XTS', 'DGFGDG56', 100, 1150.50), ('Auricular inalambrico Xiaomi 3t5', 'GRGDRGD55', 90, 800.75), ('Carcaza Transparente Iphone 15x', 'CARCA89894', 200, 70) [21002-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:295)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:489)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at edu.coderhouse.jpa.JpaApplication.main(JpaApplication.java:10)
2024-09-29 03:25:34.735746+02:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Columna "CLIENT.ID" no encontrada
Column "CLIENT.ID" not found; SQL statement:
select * from invoices, clients where client.id=1 [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.expression.condition.Comparison.optimize(Comparison.java:147)
	at org.h2.expression.Expression.optimizeCondition(Expression.java:148)
	at org.h2.command.query.Select.prepareExpressions(Select.java:1177)
	at org.h2.command.query.Query.prepare(Query.java:218)
	at org.h2.command.Parser.prepareCommand(Parser.java:489)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1345)
	at org.h2.server.web.WebApp.query(WebApp.java:1143)
	at org.h2.server.web.WebApp.query(WebApp.java:1119)
	at org.h2.server.web.WebApp.process(WebApp.java:245)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:177)
	at org.h2.server.web.JakartaWebServlet.doGet(JakartaWebServlet.java:129)
	at org.h2.server.web.JakartaWebServlet.doPost(JakartaWebServlet.java:166)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-09-29 22:54:57.004607+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "CLIENTS" no encontrada
Table "CLIENTS" not found; SQL statement:
INSERT INTO CLIENTS (name, lastname, docnumber) VALUES ('Juan', 'Pรฉrez', '12345678901'), ('Ana', 'Gรณmez', '10987654321'), ('Carlos', 'Sรกnchez', '11223344556'), ('Marรญa', 'Rodrรญguez', '98765432100') [42102-224]
2024-09-29 22:55:39.718376+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "CLIENT" ya existe
Table "CLIENT" already exists; SQL statement:
CREATE TABLE CLIENT ( id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(80) NOT NULL, lastname VARCHAR(80), docnumber VARCHAR(11) ) [42101-224]
